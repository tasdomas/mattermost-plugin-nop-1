package main

// Code generated by ./tools/generate.go; DO NOT EDIT.

import (
	"github.com/mattermost/mattermost-server/v5/model"
	"github.com/mattermost/mattermost-server/v5/plugin"
	"io"
	"net/http"
)

type nopPluginHooks struct{}

func (nopPluginHooks) OnActivate() (_ error) {
	return
}

func (nopPluginHooks) Implemented() (_ []string, _ error) {
	return
}

func (nopPluginHooks) OnDeactivate() (_ error) {
	return
}

func (nopPluginHooks) OnConfigurationChange() (_ error) {
	return
}

func (nopPluginHooks) ServeHTTP(c *plugin.Context, w http.ResponseWriter, r *http.Request) {
	return
}

func (nopPluginHooks) ExecuteCommand(c *plugin.Context, args *model.CommandArgs) (_ *model.CommandResponse, _ *model.AppError) {
	return
}

func (nopPluginHooks) UserHasBeenCreated(c *plugin.Context, user *model.User) {
	return
}

func (nopPluginHooks) UserWillLogIn(c *plugin.Context, user *model.User) (_ string) {
	return
}

func (nopPluginHooks) UserHasLoggedIn(c *plugin.Context, user *model.User) {
	return
}

func (nopPluginHooks) MessageWillBePosted(c *plugin.Context, post *model.Post) (_ *model.Post, _ string) {
	return
}

func (nopPluginHooks) MessageWillBeUpdated(c *plugin.Context, newPost *model.Post, oldPost *model.Post) (_ *model.Post, _ string) {
	return
}

func (nopPluginHooks) MessageHasBeenPosted(c *plugin.Context, post *model.Post) {
	return
}

func (nopPluginHooks) MessageHasBeenUpdated(c *plugin.Context, newPost *model.Post, oldPost *model.Post) {
	return
}

func (nopPluginHooks) ChannelHasBeenCreated(c *plugin.Context, channel *model.Channel) {
	return
}

func (nopPluginHooks) UserHasJoinedChannel(c *plugin.Context, channelMember *model.ChannelMember, actor *model.User) {
	return
}

func (nopPluginHooks) UserHasLeftChannel(c *plugin.Context, channelMember *model.ChannelMember, actor *model.User) {
	return
}

func (nopPluginHooks) UserHasJoinedTeam(c *plugin.Context, teamMember *model.TeamMember, actor *model.User) {
	return
}

func (nopPluginHooks) UserHasLeftTeam(c *plugin.Context, teamMember *model.TeamMember, actor *model.User) {
	return
}

func (nopPluginHooks) FileWillBeUploaded(c *plugin.Context, info *model.FileInfo, file io.Reader, output io.Writer) (_ *model.FileInfo, _ string) {
	return
}
